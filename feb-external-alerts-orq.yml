microservicio: AQVMSTY

spring:
  data:
    redis:
      repositories:
        enabled: false
  cloud:
    loadbalancer:
      configurations: health-check
      eager-load:
        clients: feb-privatelist-proc,feb-catalogs,veradat-feb-node-security-users-proc
      health-check:
        refetch-instances-interval: 30s
        refetch-instances: true
        path:
          default: /veradat-actuator/health


logging:
  #file.name: '/logs/${spring.application.name:}.log'
  level:
    root: WARN
    com.veradat: INFO
    org.springframework: ERROR
    org.hibernate: ERROR
  pattern:
    #level: '%5p[${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
    console: '%d %-5level [%thread] [%logger ]: %msg%n'
    #file: '%d %-5level [%thread] [%logger] : %msg%n'

management:
  endpoint:
    logfile:
      enabled: true
    health:
      show-components: ALWAYS
  endpoints:
    web:
      exposure:
        include: health,info,metrics,logfile
      base-path: /veradat-actuator
  health:
    defaults:
      enabled: false
    rabbit:
      enabled: false
    redis:
      enabled: true

jwt:
  secret: $Pasdwew45sdf
   
veradat:
  microserviceId: FEAO
  rest:
    #Generales
    client: webclient #parametros v√°lidos [webclient,httpClient,restclient]
    validate-certs: true
    keystore:
    keystorePassword: notifierqa
    tlsVersion: TLSv1.2
    check_after_inactivity_ms: 9000 #timeout para obtener la conexion con el servidor
    times_to_retry_on_error: 3
    time_to_retry_on_status_error_ms: 3000
    maxRateLimit: 10
    initialRateLimit: 5
    timeout: 50000 #timeout para las respuesta del server
    responseTime_ms: 10000 # especifica el tiempo promedio en que se espera la respuesta del servidor
    conn_timeout: 15000
    #Especificos para webClient
    crt: /etc/crt
    key: /etc/key
    request_max_avg: 10
    request_max_pending_on_queue: 100
    request_pending_on_queue_timeout_ms: 10000
  restclients:
    - name: VALIDATE_CRIME_TYPE
      controller: feb-catalogs
      path: /api/v1/catalogs/crimeTypes/validate/{BUSINESS_KEY}
      method: GET
      external: false 
    - name: VALIDATE_CATALOG
      controller: feb-catalogs
      path: /api/v1/catalogs/validate/{CATALOG_TYPE}/{BUSINESS_KEY}
      method: GET
      external: false 
    - name: VALIDATE_PERSON_TYPE
      controller: feb-catalogs
      path: /api/v1/catalogs/personTypes/validate/{BUSINESS_KEY}
      method: GET
      external: false 
    - name: VALIDATE_ORIGIN_TYPE
      controller: feb-catalogs
      path: /api/v1/catalogs/originTypes/validate/{BUSINESS_KEY}
      method: GET
      external: false 
    - name: SEARCH_NATIONAL
      controller: feb-privatelist-proc
      path: /api/v1/privatelist/national
      method: POST
      external: false 
    - name: SEARCH_FOREIGN
      controller: feb-privatelist-proc
      path: /api/v1/privatelist/foreign
      method: POST
      external: false 
    - name: SEARCH_ESCROW
      controller: feb-privatelist-proc
      path: /api/v1/privatelist/escrow
      method: POST
      external: false 
    - name: GET_USERS
      controller: veradat-feb-node-security-users-proc
      path: /api/v1/users/all/filter
      method: POST
      external: false 
  email:
    supervisor: FBSPV
    subject: Notificacion de nueva alerta
    template: VDTAL
    user-name: name_user
    login-key: url_login
    login-url: https://feb-client-web-veradat-feb-node.apps.dev-feb-cluster.ebsr.p1.openshiftapps.com/
  broker-messages:
    global:
      reprocessQueue: vdt_general_reprocess_queue
      dlqQueue: vdt_general_dlq_queue
      securityEventQueue: vdt_security_event_queue
    rabbitmq:
      general:
        reprocessRoutingKey: vdt.general_reprocess_queue.routingkey
        reprocessExchange: veradat.general.exchange
        dlqRoutingKey: vdt.general_dlq_queue.routingkey
        dlqExchange: veradat.general.exchange
        securityEventRoutingKey: vdt.security_event.routingkey
        securityExchange: veradat.security.exchange
      input:
        queues:
          consult-privatelist: feb.alerts_process.queue
          persisted-alert: feb.alerts_persisted.queue
      output:
        queues:
          - name: feb.traceability_create-process.queue
            exchange: feb.traceability.exchange
            routingKey: feb.traceability_create-process.routing_key
          - name: feb.alerts_process.queue
            exchange: feb.alerts.exchange
            routingKey: feb.alerts_process.routing_key
          - name: feb.alerts_persist.queue
            exchange: feb.alerts.exchange
            routingKey: feb.alerts_persist.routing_key
          - name: feb.alerts_send-result.queue
            exchange: feb.alerts.exchange
            routingKey: feb.alerts_send-result.routing_key
          - name: feb.transversal_create-case.queue
            exchange: feb.transversal.exchange
            routingKey: feb.transversal_create-case.routing_key
          - name: feb.general_smtp-send-mail.queue
            exchange: feb.batch-general.exchange
            routingKey: feb.general_smtp-send-mail.routing_key
      reply:
        timeout: 60000
        maxAttempts: 3
        interval: 3000
      concurrent:
        consumers: 1
      max:
        concurrent:
          consumers: 2
      missingQueuesFatal: false
      recoveryInitialInterval: 30000
      recoveryMultiplierInterval: 2
      recoveryMaxInterval: 120000
      heartbeat: 60
      networkRecoveryInterval: 60
      channelCacheSize: 25
      ssl:
        keyStoreType: jks
        trustStoreType: jks
        skipServerCertificateValidation: false
        sslAlgorithm: TLSv1.2
  security:
    permissions:
      disabled: false