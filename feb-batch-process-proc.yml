
spring:
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: oracle.jdbc.OracleDriver
  hikari:
    maxLifetime: 900000
    idleTimeout: 600000
    connection-timeout: 20000
    auto-commit: false
    maximum-pool-size: 5
    minimum-idle: 5
  jpa:
    properties:
      hibernate:
        order-inserts: true
        order-updates: true
        jdbc:
          batch_size: 1000
          fetch_size: 100000
    show-sql: false
  data:
    redis:
      repositories:
        enabled: false

logging:
  #file.name: '/logs/${spring.application.name:}.log'
  level:
    root: WARN
    com.veradat: INFO
    org.springframework: ERROR
    org.hibernate: ERROR
  pattern:
    #level: '%5p[${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
    console: '%d %-5level [%thread] [%logger ]: %msg%n'
    #file: '%d %-5level [%thread] [%logger] : %msg%n'

management:
  endpoint:
    logfile:
      enabled: true
    health:
      show-components: ALWAYS
  endpoints:
    web:
      exposure:
        include: health,info,metrics,logfile
      base-path: /veradat-actuator
  health:
    defaults:
      enabled: false
    rabbit:
      enabled: false
    redis:
      enabled: true
    db:
      enabled: true

jwt:
  secret: $Pasdwew45sdf
   
veradat:
  microserviceId: FBPP
  constants:
    minutes-to-retry: 20
  errors:
    duplicate-key: El id de un proceso no puede ser duplicado
    duplicate-entry: Registro duplicado en el insumo
    origin-not-supported: No se soporta el tipo de origen
  broker-messages:
    global:
      reprocessQueue: vdt_general_reprocess_queue
      dlqQueue: vdt_general_dlq_queue
      securityEventQueue: vdt_security_event_queue
    rabbitmq:
      general:
        reprocessRoutingKey: vdt.general_reprocess_queue.routingkey
        reprocessExchange: veradat.general.exchange
        dlqRoutingKey: vdt.general_dlq_queue.routingkey
        dlqExchange: veradat.general.exchange
        securityEventRoutingKey: vdt.security_event.routingkey
        securityExchange: veradat.security.exchange
      input:
        queues:
          close-chunk: feb.batch_close-chunk.queue
          update-fragment-status: feb.batch_update-fragment-status.queue
          row-result: feb.batch_row-result.queue
          register-process: feb.batch_register-process.queue
          register-chunk: feb.batch_register-chunk.queue
          update-process-status: feb.batch_update-process-status.queue
          bulk-chunk: feb.batch_bulk-chunk.queue
          fragment-chunk: feb.batch_fragment-chunk.queue
          clean-fragment: feb.batch_clean-rows.queue
      output:
        queues:
          - name: feb.batch_chunk-registered.queue
            exchange: feb.batch.exchange
            routingKey: feb.batch_chunk-registered.routing_key

          - name: feb.batch_chunk-fragmented.queue
            exchange: feb.batch.exchange
            routingKey: feb.batch_chunk-fragmented.routing_key

          - name: feb.batch_process-registered.queue
            exchange: feb.batch.exchange
            routingKey: feb.batch_process-registered.routing_key

          - name: feb.batch_chunk-bulked.queue
            exchange: feb.batch.exchange
            routingKey: feb.batch_chunk-bulked.routing_key
          
          - name: feb.batch_delay-fragment.queue
            exchange: feb.batch.exchange
            routingKey: feb.batch_delay-fragment.routing_key

            
      reply:
        timeout: 60000
        maxAttempts: 3
        interval: 3000
      concurrent:
        consumers: 1
      max:
        concurrent:
          consumers: 2
      missingQueuesFatal: false
      recoveryInitialInterval: 30000
      recoveryMultiplierInterval: 2
      recoveryMaxInterval: 120000
      heartbeat: 60
      networkRecoveryInterval: 60
      channelCacheSize: 25
      ssl:
        enabled: false
        keyStoreType: jks
        trustStoreType: jks
        skipServerCertificateValidation: false
        sslAlgorithm: TLSv1.2
  security:
    permissions:
      disabled: false